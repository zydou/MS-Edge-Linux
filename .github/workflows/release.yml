---
name: MS Edge

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - .github/workflows/release.yml
      - build.sh
  schedule:
    - cron: 0 23 * * *

permissions: write-all

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {channel: Stable, variant: stable}
          - {channel: Beta, variant: beta}
          - {channel: Dev, variant: dev}
    runs-on: ubuntu-latest
    name: build
    steps:
      - name: check if we need to trigger a build
        id: check
        run: |
          wget -q -O info.json 'https://edgeupdates.microsoft.com/api/products'
          VERSION=$(jq -r '.[] | select(.Product == "${{matrix.channel}}") | .Releases[] | select(.Platform == "Linux" and .Architecture == "x64") | .ProductVersion' info.json)
          URL=$(jq -r '.[] | select(.Product == "${{matrix.channel}}") | .Releases[] | select(.Platform == "Linux" and .Architecture == "x64") | .Artifacts[] | select(.ArtifactName == "deb") | .Location' info.json)
          echo "version=$VERSION" >> "$GITHUB_ENV"
          echo "url=$URL" >> "$GITHUB_ENV"
          if ! wget --spider "https://github.com/${{github.repository}}/releases/download/${{matrix.variant}}/microsoft-edge-${{matrix.variant}}-${VERSION}-x86_64.AppImage" > /dev/null 2>&1; then
          echo "trigger=true" >> "$GITHUB_ENV"
          echo "Build ${{matrix.variant}} $VERSION"
          else
          echo "trigger=false" >> "$GITHUB_ENV"
          echo "Skip ${{matrix.variant}} $VERSION"
          fi

      - name: checkout
        if: env.trigger == 'true'
        uses: actions/checkout@main

      - name: build
        if: env.trigger == 'true'
        env:
          VERSION: ${{ env.version }}
          VARIANT: ${{ matrix.variant }}
          URL: ${{ env.url }}
        run: |
          sudo apt update
          sudo apt install libfuse2
          bash build.sh
          cp "microsoft-edge-${VARIANT}-${VERSION}-x86_64.tar.xz" "microsoft-edge-${VARIANT}-x86_64.tar.xz"
          cp "microsoft-edge-${VARIANT}-${VERSION}-x86_64.AppImage" "microsoft-edge-${VARIANT}-x86_64.AppImage"
          shasum -a 1 microsoft-edge-* > SHA1SUMS

      - name: create release note
        if: env.trigger == 'true'
        run: |
          echo "Build date: $(date '+%Y-%m-%d %H:%M:%S')" > note.md
          echo '### SHA1 Checksums' >> note.md
          echo '```' >> note.md  # Do not use double quotes
          cat SHA1SUMS >> note.md
          echo '```' >> note.md
          cat note.md

      - name: Release non-stable
        if: matrix.variant != 'stable' && env.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.version }}
          VARIANT: ${{ matrix.variant }}
        run: |
          gh release delete "${VARIANT}" --cleanup-tag --yes --repo "${{github.repository}}" || true
          sleep 2 # wait for the tag to be deleted
          gh release create "${VARIANT}" --prerelease --notes-file note.md --title "${VARIANT} ${VERSION}" --repo "${{github.repository}}"
          gh release upload "${VARIANT}" ./microsoft-edge-* --clobber --repo "${{github.repository}}"
          gh release upload "${VARIANT}" ./SHA1SUMS --clobber --repo "${{github.repository}}"

      - name: Release stable
        if: matrix.variant == 'stable' && env.trigger == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.version }}
          VARIANT: ${{ matrix.variant }}
        run: |
          gh release delete "${VARIANT}" --cleanup-tag --yes --repo "${{github.repository}}" || true
          sleep 2 # wait for the tag to be deleted
          gh release create "${VARIANT}" --notes-file note.md --title "${VARIANT} ${VERSION}" --repo "${{github.repository}}"
          gh release upload "${VARIANT}" ./microsoft-edge-* --clobber --repo "${{github.repository}}"
          gh release upload "${VARIANT}" ./SHA1SUMS --clobber --repo "${{github.repository}}"

          gh release create "${VERSION}" --latest --notes-file note.md --title "${VARIANT} ${VERSION}" --repo "${{github.repository}}" || true
          gh release edit "${VERSION}" --latest --notes-file note.md --title "${VARIANT} ${VERSION}" --repo "${{github.repository}}" || true
          gh release upload "${VERSION}" "microsoft-edge-${VARIANT}-${VERSION}-x86_64.AppImage" --clobber --repo "${{github.repository}}"
          gh release upload "${VERSION}" "microsoft-edge-${VARIANT}-${VERSION}-x86_64.tar.xz" --clobber --repo "${{github.repository}}"
          gh release upload "${VERSION}" ./SHA1SUMS --clobber --repo "${{github.repository}}"

  keepalive-job:
    name: Keepalive Workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: gautamkrishnar/keepalive-workflow@v2
